#!/bin/bash
# nvq [$TARGET:./package.json]
# Example: nvs @myscope/mypackage
#
# npm-versions-query
#
# Show current and latest version of dependencies from a package.json
#
# TODO: If $TARGET starts with `.`, it is assumed to be a path to a package manifest on the local filesystem and read from there.
#   Otherwise, it will be looked up on the $NPM_CONFIG_REGISTRY

set -e

nvs_current_and_latest () {
  REGISTRY=$1
  PKG=$2
  CURRENT=$3

  LATEST="$(nvs ${PKG} ${REGISTRY} | tail -n1 | cut -f1)"
  printf "%s\t%s\t%s\n" ${PKG} ${CURRENT} ${LATEST}
}

# https://stackoverflow.com/questions/11003418/calling-shell-functions-with-xargs
export -f nvs_current_and_latest


REGISTRY=${NPM_CONFIG_REGISTRY:-https://registry.npmjs.org}
TARGET=./package.json

CONCURRENCY=8
SECTION=dependencies

while getopts "h?cdPprt:" opt; do
  case "$opt" in
    h|\?)
      echo rtfs
      exit 1
      ;;
    d)  SECTION=devDependencies
      ;;
    p)  SECTION=peerDependencies
      ;;
    P)  CONCURRENCY=$OPTARG
      ;;
    r)  REGISTRY=$OPTARG
      ;;
    t)  TARGET=$OPTARG
      ;;
  esac
done

jq -r ".${SECTION}|to_entries|map(.key,.value)|.[]" ${TARGET} \
  | xargs -P${CONCURRENCY} -n2 bash -c "nvs_current_and_latest ${REGISTRY} \$0 \$1" \
  | sort | column -t

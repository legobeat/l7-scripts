#!/bin/bash
# nvq
# Example: nvq -n @myscope/mypackage
#          nvq -f ./packages/mypackage/package.json
#
# npm-versions-query
#
# Show current and latest version of dependencies from a package.json

set -e

nvs_current_and_latest () {
  set -e
  SORT=$1
  PKG=$2
  CURRENT=$3

  LATEST="$(nvs ${PKG} | sort ${SORT} | grep -aEv '^[^\^0-9TZ.<>=-]*$' | tail -n1 | cut -f1)"
  printf "%s\t%s\t%s\n" ${PKG} ${CURRENT} ${LATEST}
}

# https://stackoverflow.com/questions/11003418/calling-shell-functions-with-xargs
export -f nvs_current_and_latest


CONCURRENCY=8
SECTION=dependencies
TARGETFILE=./package.json
SORT=-z

while getopts "h?C:Df:n:P:pr:V" opt; do
  case "$opt" in
    h|\?)
      echo rtfs
      exit 1
      ;;
    C)  CONCURRENCY=$OPTARG
      ;;
    D)  SECTION=devDependencies
      ;;
    f)  TARGETFILE=$OPTARG
      ;;
    n)  TARGETNAME=$OPTARG
      ;;
    p)  SECTION=peerDependencies
      ;;
    r)  NPM_CONFIG_REGISTRY=$OPTARG
      ;;
    # Show latest by version, not by publish date like default
    V)  SORT=-V
      ;;
  esac
done

getdeps () {
  if [[ -z "${TARGETNAME}" ]]; then
    jq -r "if .${SECTION} then .${SECTION} else {} end" "${TARGETFILE}"
  else
    npm info "${TARGETNAME}" "${SECTION}" --json
  fi
}

getdeps | jq 'to_entries|map(.key,.value)|.[]' \
  | xargs -P${CONCURRENCY} -n2 bash -c "nvs_current_and_latest ${SORT} \$0 \$1" \
  | sort | column -t
